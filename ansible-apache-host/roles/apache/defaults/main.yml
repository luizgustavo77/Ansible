---
# EDIAR PARA CADA CLIENTE
servername: "lgf.ybridge.io"
documentroot: "/var/www/html/"

apache_enablerepo: ""

apache_listen_ip: "*"
apache_listen_port: 80
apache_listen_port_ssl: 443

apache_create_vhosts: true
apache_vhosts_filename: "host.conf"
apache_vhosts_template: "vhosts.conf.j2"
apache_vhosts_template_ssl: "full.conf.j2"
apache_vhosts_template_httpd: "httpd.js"
apache_conf_path_httpd: "/etc/httpd"
apache_vhosts_filename_httpd: "httpd.conf"

# On Debian/Ubuntu, a default virtualhost is included in Apache's configuration.
# Set this to `true` to remove that default.
apache_remove_default_vhost: false

apache_global_vhost_settings: |
  DirectoryIndex index.php index.html

apache_allow_override: "All"
apache_options: "-Indexes +FollowSymLinks"

apache_ignore_missing_ssl_certificate: true

apache_ssl_protocol: "All -SSLv2 -SSLv3"
apache_ssl_cipher_suite: "AES256+EECDH:AES256+EDH"

# Only used on Debian/Ubuntu.
apache_mods_enabled:
  - rewrite.load
  - ssl.load
apache_mods_disabled: []

# Set initial apache state. Recommended values: `started` or `stopped`
apache_state: started

# Set apache state when configuration changes are made. Recommended values:
# `restarted` or `reloaded`
apache_restart_state: restarted

# Apache package state; use `present` to make sure it's installed, or `latest`
# if you want to upgrade or switch versions using a new repo.
apache_packages_state: latest

# Certbot auto-renew cron job configuration (for certificate renewals).
certbot_package: certbot
certbot_package_apache: python2-certbot-apache
certbot_auto_renew: true
certbot_auto_renew_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
certbot_auto_renew_hour: 3
certbot_auto_renew_minute: 30
certbot_auto_renew_options: "--quiet --no-self-upgrade"

# Parameters used when creating new Certbot certs.
certbot_create_if_missing: true
certbot_create_method: standalone
certbot_admin_email: "status@yami.com.br"
#certbot_certs: {{ servername }}
# - email: janedoe@example.com
#   domains:
#     - example1.com
#     - example2.com
# - domains: {{ servername }}

certbot_create_command: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ servername }}"
# "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ servername }}"
#certbot certonly --standalone --non-interactive --email=status@yami.com.br -d minhatroca.com.br
#certbot --webroot-path /var/www/html --authenticator webroot --installer apache --expand --non-interactive --agree-tos --email={{ certbot_admin_email }} --domains {{ servername }}
#certbot-auto certonly --apache --non-interactive --agree-tos --email {{ certbot_admin_email }} -d {{ servername }}
#certbot-auto --non-interactive --agree-tos --email {{ certbot_admin_email }} --apache --domains {{ servername }}

certbot_create_standalone_stop_services:
  # nginx
   - httpd
  # - varnish

# To install from source (on older OSes or if you need a specific or newer
# version of Certbot), set this variable to `yes` and configure other options.
certbot_install_from_source: false
certbot_repo: https://github.com/luizgustavo77/certbot.git
certbot_version: master
certbot_keep_updated: true

# Where to put Certbot when installing from source.
certbot_dir: /opt/certbot
